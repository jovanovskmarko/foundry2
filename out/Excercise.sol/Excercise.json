{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_counter",
          "type": "int256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decrementCounter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCount",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementCounter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260405162000cb138038062000cb1833981016040819052620000269162000188565b6040518060400160405280600881526020016726a9102a37b5b2b760c11b8152506040518060400160405280600381526020016226aa2760e91b815250816003908162000074919062000246565b50600462000083828262000246565b505050620000a23369021e19e0c9bab2400000620000bd60201b60201c565b600680546001600160a01b031916331790556005556200033a565b6001600160a01b038216620001185760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200012c919062000312565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b6000602082840312156200019b57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001cd57607f821691505b602082108103620001ee57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018357600081815260208120601f850160051c810160208610156200021d5750805b601f850160051c820191505b818110156200023e5782815560010162000229565b505050505050565b81516001600160401b03811115620002625762000262620001a2565b6200027a81620002738454620001b8565b84620001f4565b602080601f831160018114620002b25760008415620002995750858301515b600019600386901b1c1916600185901b1785556200023e565b600085815260208120601f198616915b82811015620002e357888601518255948401946001909101908401620002c2565b5085821015620003025787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200033457634e487b7160e01b600052601160045260246000fd5b92915050565b610967806200034a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146101d8578063dd62ed3e146101eb578063f5c5ad83146101fe578063f851a4401461020657600080fd5b806370a082311461018c57806395d89b41146101b5578063a457c2d7146101bd578063a87d942c146101d057600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f5780635b34b9661461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610231565b60405161010f919061075a565b60405180910390f35b61012b6101263660046107c4565b6102c3565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b3660046107ee565b6102dd565b6040516012815260200161010f565b61012b61017d3660046107c4565b610301565b61018a610323565b005b61013f61019a36600461082a565b6001600160a01b031660009081526020819052604090205490565b61010261033d565b61012b6101cb3660046107c4565b61034c565b60055461013f565b61012b6101e63660046107c4565b6103cc565b61013f6101f936600461084c565b6103da565b61018a610405565b600654610219906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b6060600380546102409061087f565b80601f016020809104026020016040519081016040528092919081815260200182805461026c9061087f565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b5050505050905090565b6000336102d1818585610418565b60019150505b92915050565b6000336102eb85828561053c565b6102f68585856105b6565b506001949350505050565b6000336102d181858561031483836103da565b61031e91906108cf565b610418565b60016005600082825461033691906108e2565b9091555050565b6060600480546102409061087f565b6000338161035a82866103da565b9050838110156103bf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102f68286868403610418565b6000336102d18185856105b6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600160056000828254610336919061090a565b6001600160a01b03831661047a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b6565b6001600160a01b0382166104db5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061054884846103da565b905060001981146105b057818110156105a35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b6565b6105b08484848403610418565b50505050565b6001600160a01b03831661061a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b6565b6001600160a01b03821661067c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b6565b6001600160a01b038316600090815260208190526040902054818110156106f45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105b0565b600060208083528351808285015260005b818110156107875785810183015185820160400152820161076b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bf57600080fd5b919050565b600080604083850312156107d757600080fd5b6107e0836107a8565b946020939093013593505050565b60008060006060848603121561080357600080fd5b61080c846107a8565b925061081a602085016107a8565b9150604084013590509250925092565b60006020828403121561083c57600080fd5b610845826107a8565b9392505050565b6000806040838503121561085f57600080fd5b610868836107a8565b9150610876602084016107a8565b90509250929050565b600181811c9082168061089357607f821691505b6020821081036108b357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102d7576102d76108b9565b8082018281126000831280158216821582161715610902576109026108b9565b505092915050565b818103600083128015838313168383128216171561092a5761092a6108b9565b509291505056fea2646970667358221220ee480cd88c95dacb3e34f0eee7b9d11658bb5427c50a56890ae82c56105c472864736f6c63430008110033",
    "sourceMap": "110:495:4:-:0;;;199:168;;;;;;;;;;;;;;;;;;:::i;:::-;2029:116:0;;;;;;;;;;;;;-1:-1:-1;;;2029:116:0;;;;;;;;;;;;;;;;-1:-1:-1;;;2029:116:0;;;2104:5;2096;:13;;;;;;:::i;:::-;-1:-1:-1;2120:7:0;:17;2130:7;2120;:17;:::i;:::-;;2029:116;;267:34:4::1;273:10;284:16;267:5;;;:34;;:::i;:::-;312:5;:18:::0;;-1:-1:-1;;;;;;312:18:4::1;320:10;312:18;::::0;;341:7:::1;:18:::0;110:495;;8825:548:0;-1:-1:-1;;;;;8909:21:0;;8901:65;;;;-1:-1:-1;;;8901:65:0;;3125:2:5;8901:65:0;;;3107:21:5;3164:2;3144:18;;;3137:30;3203:33;3183:18;;;3176:61;3254:18;;8901:65:0;;;;;;;;9057:6;9041:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9212:18:0;;:9;:18;;;;;;;;;;;:28;;;;;;9267:37;3656:25:5;;;9267:37:0;;3629:18:5;9267:37:0;;;;;;;8825:548;;:::o;12543:125::-;;;;:::o;14:183:5:-;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;-1:-1:-1;175:16:5;;14:183;-1:-1:-1;14:183:5:o;202:127::-;263:10;258:3;254:20;251:1;244:31;294:4;291:1;284:15;318:4;315:1;308:15;334:380;413:1;409:12;;;;456;;;477:61;;531:4;523:6;519:17;509:27;;477:61;584:2;576:6;573:14;553:18;550:38;547:161;;630:10;625:3;621:20;618:1;611:31;665:4;662:1;655:15;693:4;690:1;683:15;547:161;;334:380;;;:::o;845:545::-;947:2;942:3;939:11;936:448;;;983:1;1008:5;1004:2;997:17;1053:4;1049:2;1039:19;1123:2;1111:10;1107:19;1104:1;1100:27;1094:4;1090:38;1159:4;1147:10;1144:20;1141:47;;;-1:-1:-1;1182:4:5;1141:47;1237:2;1232:3;1228:12;1225:1;1221:20;1215:4;1211:31;1201:41;;1292:82;1310:2;1303:5;1300:13;1292:82;;;1355:17;;;1336:1;1325:13;1292:82;;;1296:3;;;845:545;;;:::o;1566:1352::-;1686:10;;-1:-1:-1;;;;;1708:30:5;;1705:56;;;1741:18;;:::i;:::-;1770:97;1860:6;1820:38;1852:4;1846:11;1820:38;:::i;:::-;1814:4;1770:97;:::i;:::-;1922:4;;1986:2;1975:14;;2003:1;1998:663;;;;2705:1;2722:6;2719:89;;;-1:-1:-1;2774:19:5;;;2768:26;2719:89;-1:-1:-1;;1523:1:5;1519:11;;;1515:24;1511:29;1501:40;1547:1;1543:11;;;1498:57;2821:81;;1968:944;;1998:663;792:1;785:14;;;829:4;816:18;;-1:-1:-1;;2034:20:5;;;2152:236;2166:7;2163:1;2160:14;2152:236;;;2255:19;;;2249:26;2234:42;;2347:27;;;;2315:1;2303:14;;;;2182:19;;2152:236;;;2156:3;2416:6;2407:7;2404:19;2401:201;;;2477:19;;;2471:26;-1:-1:-1;;2560:1:5;2556:14;;;2572:3;2552:24;2548:37;2544:42;2529:58;2514:74;;2401:201;-1:-1:-1;;;;;2648:1:5;2632:14;;;2628:22;2615:36;;-1:-1:-1;1566:1352:5:o;3283:222::-;3348:9;;;3369:10;;;3366:133;;;3421:10;3416:3;3412:20;3409:1;3402:31;3456:4;3453:1;3446:15;3484:4;3481:1;3474:15;3366:133;3283:222;;;;:::o;3510:177::-;110:495:4;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146101d8578063dd62ed3e146101eb578063f5c5ad83146101fe578063f851a4401461020657600080fd5b806370a082311461018c57806395d89b41146101b5578063a457c2d7146101bd578063a87d942c146101d057600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f5780635b34b9661461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610231565b60405161010f919061075a565b60405180910390f35b61012b6101263660046107c4565b6102c3565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b3660046107ee565b6102dd565b6040516012815260200161010f565b61012b61017d3660046107c4565b610301565b61018a610323565b005b61013f61019a36600461082a565b6001600160a01b031660009081526020819052604090205490565b61010261033d565b61012b6101cb3660046107c4565b61034c565b60055461013f565b61012b6101e63660046107c4565b6103cc565b61013f6101f936600461084c565b6103da565b61018a610405565b600654610219906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b6060600380546102409061087f565b80601f016020809104026020016040519081016040528092919081815260200182805461026c9061087f565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b5050505050905090565b6000336102d1818585610418565b60019150505b92915050565b6000336102eb85828561053c565b6102f68585856105b6565b506001949350505050565b6000336102d181858561031483836103da565b61031e91906108cf565b610418565b60016005600082825461033691906108e2565b9091555050565b6060600480546102409061087f565b6000338161035a82866103da565b9050838110156103bf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102f68286868403610418565b6000336102d18185856105b6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600160056000828254610336919061090a565b6001600160a01b03831661047a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b6565b6001600160a01b0382166104db5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061054884846103da565b905060001981146105b057818110156105a35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b6565b6105b08484848403610418565b50505050565b6001600160a01b03831661061a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b6565b6001600160a01b03821661067c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b6565b6001600160a01b038316600090815260208190526040902054818110156106f45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105b0565b600060208083528351808285015260005b818110156107875785810183015185820160400152820161076b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bf57600080fd5b919050565b600080604083850312156107d757600080fd5b6107e0836107a8565b946020939093013593505050565b60008060006060848603121561080357600080fd5b61080c846107a8565b925061081a602085016107a8565b9150604084013590509250925092565b60006020828403121561083c57600080fd5b610845826107a8565b9392505050565b6000806040838503121561085f57600080fd5b610868836107a8565b9150610876602084016107a8565b90509250929050565b600181811c9082168061089357607f821691505b6020821081036108b357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102d7576102d76108b9565b8082018281126000831280158216821582161715610902576109026108b9565b505092915050565b818103600083128015838313168383128216171561092a5761092a6108b9565b509291505056fea2646970667358221220ee480cd88c95dacb3e34f0eee7b9d11658bb5427c50a56890ae82c56105c472864736f6c63430008110033",
    "sourceMap": "110:495:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2215:100:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4566:201;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:5;;1162:22;1144:41;;1132:2;1117:18;4566:201:0;1004:187:5;3335:108:0;3423:12;;3335:108;;;1342:25:5;;;1330:2;1315:18;3335:108:0;1196:177:5;5347:295:0;;;;;;:::i;:::-;;:::i;3177:93::-;;;3260:2;1853:36:5;;1841:2;1826:18;3177:93:0;1711:184:5;6051:238:0;;;;;;:::i;:::-;;:::i;377:65:4:-;;;:::i;:::-;;3506:127:0;;;;;;:::i;:::-;-1:-1:-1;;;;;3607:18:0;3580:7;3607:18;;;;;;;;;;;;3506:127;2434:104;;;:::i;6792:436::-;;;;;;:::i;:::-;;:::i;523:77:4:-;585:7;;523:77;;3839:193:0;;;;;;:::i;:::-;;:::i;4095:151::-;;;;;;:::i;:::-;;:::i;450:65:4:-;;;:::i;170:20::-;;;;;-1:-1:-1;;;;;170:20:4;;;;;;-1:-1:-1;;;;;2700:32:5;;;2682:51;;2670:2;2655:18;170:20:4;2536:203:5;2215:100:0;2269:13;2302:5;2295:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2215:100;:::o;4566:201::-;4649:4;736:10:3;4705:32:0;736:10:3;4721:7:0;4730:6;4705:8;:32::i;:::-;4755:4;4748:11;;;4566:201;;;;;:::o;5347:295::-;5478:4;736:10:3;5536:38:0;5552:4;736:10:3;5567:6:0;5536:15;:38::i;:::-;5585:27;5595:4;5601:2;5605:6;5585:9;:27::i;:::-;-1:-1:-1;5630:4:0;;5347:295;-1:-1:-1;;;;5347:295:0:o;6051:238::-;6139:4;736:10:3;6195:64:0;736:10:3;6211:7:0;6248:10;6220:25;736:10:3;6211:7:0;6220:9;:25::i;:::-;:38;;;;:::i;:::-;6195:8;:64::i;377:65:4:-;433:1;422:7;;:12;;;;;;;:::i;:::-;;;;-1:-1:-1;;377:65:4:o;2434:104:0:-;2490:13;2523:7;2516:14;;;;;:::i;6792:436::-;6885:4;736:10:3;6885:4:0;6968:25;736:10:3;6985:7:0;6968:9;:25::i;:::-;6941:52;;7032:15;7012:16;:35;;7004:85;;;;-1:-1:-1;;;7004:85:0;;3814:2:5;7004:85:0;;;3796:21:5;3853:2;3833:18;;;3826:30;3892:34;3872:18;;;3865:62;-1:-1:-1;;;3943:18:5;;;3936:35;3988:19;;7004:85:0;;;;;;;;;7125:60;7134:5;7141:7;7169:15;7150:16;:34;7125:8;:60::i;3839:193::-;3918:4;736:10:3;3974:28:0;736:10:3;3991:2:0;3995:6;3974:9;:28::i;4095:151::-;-1:-1:-1;;;;;4211:18:0;;;4184:7;4211:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4095:151::o;450:65:4:-;506:1;495:7;;:12;;;;;;;:::i;10819:380:0:-;-1:-1:-1;;;;;10955:19:0;;10947:68;;;;-1:-1:-1;;;10947:68:0;;4425:2:5;10947:68:0;;;4407:21:5;4464:2;4444:18;;;4437:30;4503:34;4483:18;;;4476:62;-1:-1:-1;;;4554:18:5;;;4547:34;4598:19;;10947:68:0;4223:400:5;10947:68:0;-1:-1:-1;;;;;11034:21:0;;11026:68;;;;-1:-1:-1;;;11026:68:0;;4830:2:5;11026:68:0;;;4812:21:5;4869:2;4849:18;;;4842:30;4908:34;4888:18;;;4881:62;-1:-1:-1;;;4959:18:5;;;4952:32;5001:19;;11026:68:0;4628:398:5;11026:68:0;-1:-1:-1;;;;;11107:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11159:32;;1342:25:5;;;11159:32:0;;1315:18:5;11159:32:0;;;;;;;10819:380;;;:::o;11490:453::-;11625:24;11652:25;11662:5;11669:7;11652:9;:25::i;:::-;11625:52;;-1:-1:-1;;11692:16:0;:37;11688:248;;11774:6;11754:16;:26;;11746:68;;;;-1:-1:-1;;;11746:68:0;;5233:2:5;11746:68:0;;;5215:21:5;5272:2;5252:18;;;5245:30;5311:31;5291:18;;;5284:59;5360:18;;11746:68:0;5031:353:5;11746:68:0;11858:51;11867:5;11874:7;11902:6;11883:16;:25;11858:8;:51::i;:::-;11614:329;11490:453;;;:::o;7698:840::-;-1:-1:-1;;;;;7829:18:0;;7821:68;;;;-1:-1:-1;;;7821:68:0;;5591:2:5;7821:68:0;;;5573:21:5;5630:2;5610:18;;;5603:30;5669:34;5649:18;;;5642:62;-1:-1:-1;;;5720:18:5;;;5713:35;5765:19;;7821:68:0;5389:401:5;7821:68:0;-1:-1:-1;;;;;7908:16:0;;7900:64;;;;-1:-1:-1;;;7900:64:0;;5997:2:5;7900:64:0;;;5979:21:5;6036:2;6016:18;;;6009:30;6075:34;6055:18;;;6048:62;-1:-1:-1;;;6126:18:5;;;6119:33;6169:19;;7900:64:0;5795:399:5;7900:64:0;-1:-1:-1;;;;;8050:15:0;;8028:19;8050:15;;;;;;;;;;;8084:21;;;;8076:72;;;;-1:-1:-1;;;8076:72:0;;6401:2:5;8076:72:0;;;6383:21:5;6440:2;6420:18;;;6413:30;6479:34;6459:18;;;6452:62;-1:-1:-1;;;6530:18:5;;;6523:36;6576:19;;8076:72:0;6199:402:5;8076:72:0;-1:-1:-1;;;;;8184:15:0;;;:9;:15;;;;;;;;;;;8202:20;;;8184:38;;8402:13;;;;;;;;;;:23;;;;;;8454:26;;1342:25:5;;;8402:13:0;;8454:26;;1315:18:5;8454:26:0;;;;;;;8493:37;12543:125;14:548:5;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:5;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:5:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:5:o;2271:260::-;2339:6;2347;2400:2;2388:9;2379:7;2375:23;2371:32;2368:52;;;2416:1;2413;2406:12;2368:52;2439:29;2458:9;2439:29;:::i;:::-;2429:39;;2487:38;2521:2;2510:9;2506:18;2487:38;:::i;:::-;2477:48;;2271:260;;;;;:::o;2744:380::-;2823:1;2819:12;;;;2866;;;2887:61;;2941:4;2933:6;2929:17;2919:27;;2887:61;2994:2;2986:6;2983:14;2963:18;2960:38;2957:161;;3040:10;3035:3;3031:20;3028:1;3021:31;3075:4;3072:1;3065:15;3103:4;3100:1;3093:15;2957:161;;2744:380;;;:::o;3129:127::-;3190:10;3185:3;3181:20;3178:1;3171:31;3221:4;3218:1;3211:15;3245:4;3242:1;3235:15;3261:125;3326:9;;;3347:10;;;3344:36;;;3360:18;;:::i;3391:216::-;3455:9;;;3483:11;;;3430:3;3513:9;;3541:10;;3537:19;;3566:10;;3558:19;;3534:44;3531:70;;;3581:18;;:::i;:::-;3531:70;;3391:216;;;;:::o;4018:200::-;4084:9;;;4057:4;4112:9;;4140:10;;4152:12;;;4136:29;4175:12;;;4167:21;;4133:56;4130:82;;;4192:18;;:::i;:::-;4130:82;4018:200;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "admin()": "f851a440",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "decrementCounter()": "f5c5ad83",
    "getCount()": "a87d942c",
    "increaseAllowance(address,uint256)": "39509351",
    "incrementCounter()": "5b34b966",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_counter\",\"type\":\"int256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decrementCounter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementCounter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Excercise.sol\":\"Excercise\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":op/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x7138baa2520f7c1d6943ce6e53192d8eae5b50bf4b27dd602f8b27144987f70c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c616140f2b008385f0bffd7915ce7ce45c1e2bba201318b89d44073e36514597\",\"dweb:/ipfs/QmdsoxHZ326dnUKNYKahgNAj8wsJH111JrQsKHz6CkVBy7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973\",\"dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"src/Excercise.sol\":{\"keccak256\":\"0x1a61e7fd344a2c78d1d14b31d22d36a711a186ce00946657c967dfc78db6f02b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d65bdbaadbd91879f3988bf69a15e48d8979226daee004f91bd37a6ba1a9c65a\",\"dweb:/ipfs/QmU6MGAJWXpqcpF69xvvhokUWhobRRXPb2VnKUpfAsFBrL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "_counter",
              "type": "int256"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decrementCounter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCount",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementCounter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":op/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Excercise.sol": "Excercise"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x7138baa2520f7c1d6943ce6e53192d8eae5b50bf4b27dd602f8b27144987f70c",
        "urls": [
          "bzz-raw://c616140f2b008385f0bffd7915ce7ce45c1e2bba201318b89d44073e36514597",
          "dweb:/ipfs/QmdsoxHZ326dnUKNYKahgNAj8wsJH111JrQsKHz6CkVBy7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130",
        "urls": [
          "bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa",
          "dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89",
        "urls": [
          "bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973",
          "dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "src/Excercise.sol": {
        "keccak256": "0x1a61e7fd344a2c78d1d14b31d22d36a711a186ce00946657c967dfc78db6f02b",
        "urls": [
          "bzz-raw://d65bdbaadbd91879f3988bf69a15e48d8979226daee004f91bd37a6ba1a9c65a",
          "dweb:/ipfs/QmU6MGAJWXpqcpF69xvvhokUWhobRRXPb2VnKUpfAsFBrL"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Excercise.sol",
    "id": 775,
    "exportedSymbols": {
      "Context": [
        711
      ],
      "ERC20": [
        586
      ],
      "Excercise": [
        774
      ],
      "IERC20": [
        664
      ],
      "IERC20Metadata": [
        689
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:958:4",
    "nodes": [
      {
        "id": 713,
        "nodeType": "PragmaDirective",
        "src": "37:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 714,
        "nodeType": "ImportDirective",
        "src": "62:44:4",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "op/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 775,
        "sourceUnit": 587,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 774,
        "nodeType": "ContractDefinition",
        "src": "110:495:4",
        "nodes": [
          {
            "id": 718,
            "nodeType": "VariableDeclaration",
            "src": "144:19:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "counter",
            "nameLocation": "156:7:4",
            "scope": 774,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 717,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "144:3:4",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 720,
            "nodeType": "VariableDeclaration",
            "src": "170:20:4",
            "nodes": [],
            "constant": false,
            "functionSelector": "f851a440",
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "185:5:4",
            "scope": 774,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 719,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "170:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 749,
            "nodeType": "FunctionDefinition",
            "src": "199:168:4",
            "nodes": [],
            "body": {
              "id": 748,
              "nodeType": "Block",
              "src": "256:111:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 730,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "273:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "277:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "273:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130303030",
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "284:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "292:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "298:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "292:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "284:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "id": 729,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "267:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "267:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "267:34:4"
                },
                {
                  "expression": {
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 739,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 720,
                      "src": "312:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 740,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "320:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "324:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "320:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "312:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "312:18:4"
                },
                {
                  "expression": {
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 744,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "341:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 745,
                      "name": "_counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "351:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "341:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "341:18:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d5220546f6b656e",
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "231:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bb96bbcfd6b07fb0a38427aa553e397570fd0b7a928034e56fd1629d635a0ad1",
                      "typeString": "literal_string \"MR Token\""
                    },
                    "value": "MR Token"
                  },
                  {
                    "hexValue": "4d544e",
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "242:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3684a7f68c9bf401655b4829032cb54e305d49285fbfed2a31ddc89e5438020e",
                      "typeString": "literal_string \"MTN\""
                    },
                    "value": "MTN"
                  }
                ],
                "id": 727,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 724,
                  "name": "ERC20",
                  "nameLocations": [
                    "225:5:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 586,
                  "src": "225:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "225:23:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "_counter",
                  "nameLocation": "215:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "211:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "211:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "210:14:4"
            },
            "returnParameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:0:4"
            },
            "scope": 774,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 757,
            "nodeType": "FunctionDefinition",
            "src": "377:65:4",
            "nodes": [],
            "body": {
              "id": 756,
              "nodeType": "Block",
              "src": "411:31:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 752,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "422:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "433:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "422:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "422:12:4"
                }
              ]
            },
            "functionSelector": "5b34b966",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "incrementCounter",
            "nameLocation": "386:16:4",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:2:4"
            },
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:0:4"
            },
            "scope": 774,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 765,
            "nodeType": "FunctionDefinition",
            "src": "450:65:4",
            "nodes": [],
            "body": {
              "id": 764,
              "nodeType": "Block",
              "src": "484:31:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 760,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "495:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "506:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "495:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "495:12:4"
                }
              ]
            },
            "functionSelector": "f5c5ad83",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrementCounter",
            "nameLocation": "459:16:4",
            "parameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:4"
            },
            "returnParameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:4"
            },
            "scope": 774,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 773,
            "nodeType": "FunctionDefinition",
            "src": "523:77:4",
            "nodes": [],
            "body": {
              "id": 772,
              "nodeType": "Block",
              "src": "567:33:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 770,
                    "name": "counter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 718,
                    "src": "585:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 769,
                  "id": 771,
                  "nodeType": "Return",
                  "src": "578:14:4"
                }
              ]
            },
            "functionSelector": "a87d942c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCount",
            "nameLocation": "532:8:4",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "540:2:4"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "563:3:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "562:5:4"
            },
            "scope": 774,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 715,
              "name": "ERC20",
              "nameLocations": [
                "132:5:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 586,
              "src": "132:5:4"
            },
            "id": 716,
            "nodeType": "InheritanceSpecifier",
            "src": "132:5:4"
          }
        ],
        "canonicalName": "Excercise",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          774,
          586,
          689,
          664,
          711
        ],
        "name": "Excercise",
        "nameLocation": "119:9:4",
        "scope": 775,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 4
}